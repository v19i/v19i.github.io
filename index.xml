<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home Page on Valerio Francescangeli</title><link>https://v19i.com/</link><description>Recent content in Home Page on Valerio Francescangeli</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Thu, 27 Apr 2023 09:13:11 +0100</lastBuildDate><atom:link href="https://v19i.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Single and Multi Purposed Software</title><link>https://v19i.com/posts/single-and-multi-purposed-software/</link><pubDate>Thu, 27 Apr 2023 09:13:11 +0100</pubDate><guid>https://v19i.com/posts/single-and-multi-purposed-software/</guid><description>Single and multi-purposed software There are two types of software, the ones with a specific focus (single-purpose) and the ones with multiple functionalities (multi-purpose).
Single-purpose software Single-purpose software, also known as focused or task-oriented software, is created specifically to get a single job done. The ideal workflow allows the user to quickly open the app, complete their task and get on with their day.
Examples Currency converter Room booking Translator Video player Simple text editor (TextEdit and Notepad).</description></item><item><title>React Pattern: Compound Component</title><link>https://v19i.com/posts/react-pattern-compound-component/</link><pubDate>Wed, 08 Mar 2023 13:03:35 +0000</pubDate><guid>https://v19i.com/posts/react-pattern-compound-component/</guid><description>React Pattern: Compound Component When creating custom UI components in React, an easy to evolve and implement solution is to add more props to an element to describe what to show on screen and what functions to call. It enables us to create a lot with a low level of abstraction and is usually a good choice.
One problem arises when creating a component used by a third party or another team (like in a component library).</description></item><item><title>On Test Driven Development</title><link>https://v19i.com/posts/on-test-driven-development/</link><pubDate>Wed, 08 Jun 2022 09:27:27 +0100</pubDate><guid>https://v19i.com/posts/on-test-driven-development/</guid><description>On Test-driven development Test-driven development is a technique at the basis of Agile software development and is, in my view, the most important contributing factor to creating high-quality results.
The primary goal of Test-driven development (TDD) is to force a quick feedback loop that forces you to write in small steps.
TDD imposes writing first a test for a code that hasn&amp;rsquo;t been written yet and then writing enough code to make it produce the desired output and nothing more.</description></item><item><title>Use The Platform: URL API</title><link>https://v19i.com/posts/use-the-platform-url-api/</link><pubDate>Fri, 07 May 2021 09:23:51 +0100</pubDate><guid>https://v19i.com/posts/use-the-platform-url-api/</guid><description>Use The Platform: URL API Modern web JavaScript provides an intuitive and feature-rich interface to parse, create and edit URLs info.
This page illustrates only the parts that I use the most; for the full spec, have a look at URL and URLSearchParams.
Create a URL A URL is created by instantiating a new URL instance:
const url = new URL(&amp;#34;https://v19i.com&amp;#34;); Manage search params The created object provides an easy interface to add, edit and remove search params; it behaves similarly to Map.</description></item><item><title>Lines in Four Directions by Sol Lewitt</title><link>https://v19i.com/posts/lines-in-four-directions-by-sol-lewitt/</link><pubDate>Mon, 18 Jan 2021 16:58:12 +0000</pubDate><guid>https://v19i.com/posts/lines-in-four-directions-by-sol-lewitt/</guid><description> Lines In Four Directions by Sol Lewitt</description></item><item><title>On Agile software development</title><link>https://v19i.com/posts/on-agile-software-development/</link><pubDate>Mon, 10 Feb 2020 10:01:00 +0000</pubDate><guid>https://v19i.com/posts/on-agile-software-development/</guid><description>On Agile software development An often distorted view In the past year, I’ve run many interviews for project-manager and engineering roles. One common thing I’ve noticed is that the industry’s idea of what Agile means, is incredibly varied, going from something that is waterfall under a different name, to a style that requires specific “Agile roles” in a team.
In this post, I’ll go through what the initial idea of Agile was, and what it should be; hopefully, this will help people realise how far from the original purpose they’ve steered.</description></item></channel></rss>